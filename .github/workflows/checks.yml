name: checks

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  clang-format:
    name: clang-format
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        path:
          - 'src'
          - 'tests'
    steps:
      - uses: actions/checkout@v2
      - name: Run clang-format style check for C/C++/Protobuf programs.
        uses: jidicula/clang-format-action@v4.6.2
        with:
          clang-format-version: '14'
          check-path: ${{ matrix.path }}

  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: 13
          platform: x64

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1.1.0
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        run: cmake -S $GITHUB_WORKSPACE -B ${{runner.workspace}}/build -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE

      - name: Compile Examples
        working-directory: ${{runner.workspace}}/build
        shell: bash
        timeout-minutes: 1
        run: ls ${{runner.workspace}}/solar/examples/*.sol | xargs -L 1 ./src/solar
